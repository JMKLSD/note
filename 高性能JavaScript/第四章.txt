第四章
1.在大多数变成语言中，代码执行时间大部分消耗在循环中。循环处理是最常见的编程模式之一，也是提升性能必须关注的要点之一。
2.循环类型包括 for循环、while循环、do-while循环和for-in循环。这些循环当中只有for-in循环比其他几种明显要慢。
3.在循环中，通过定义一个局部变量的.length属性，可以减少性能消耗。
4.通过使用倒序循环来提升性能，如  var i=items.length i--
5. 事实证明，大多数情况下switch比if-else运行要快，但只有当条件数量很大时才快得明显。
6.在条件数量较少时使用if-else，而在条件数量较大时使用switch。
7.优化if-else的方法是确保最可能出现的条件放在首位。if-else中的条件语句应该总是按照从最大概率到最小概率的顺序排列，以确保运行速度最快。
8.优化if-else的另一种方法是使用一系列嵌套的if-else语句。
9.使用查找表（数组）比if-else和switch更快。优点是不用书写任何条件判断语句，即便候选值数量增加时，也几乎不会产生额外的性能开销。
10.当单个键和单个值之间存在逻辑映射时，查找表的优势就能体现出来。switch语句更适合于每个键都需要对应一个独特的动作或一系列动作的场合。